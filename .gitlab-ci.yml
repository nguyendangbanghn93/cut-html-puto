variables:
  COMPUTER_NAME: "bangnd"
  CONTAINER_NAME: "puto-container"
  PORT: "8030:80"
  SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY_OCEAN_SERVER
  PROD_SERVER_IP: $PROD_SERVER_IP_OCEAN_SERVER
stages:
  - docker-build
  - deploy

build:


docker-build:
  stage: docker-build
  image: docker:latest
  services: 
    - name: docker:19.03.8-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"

deploy:
  stage: deploy
  image: kroniak/ssh-client
  before_script:
    - echo "deploying app"
  script:
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > key.pem
    - chmod 400 key.pem
    - ssh -o StrictHostKeyChecking=no -i key.pem $COMPUTER_NAME@$PROD_SERVER_IP "sudo usermod -aG docker $COMPUTER_NAME"
    - ssh -o StrictHostKeyChecking=no -i key.pem $COMPUTER_NAME@$PROD_SERVER_IP "sudo su - $COMPUTER_NAME"
    - ssh -o StrictHostKeyChecking=no -i key.pem $COMPUTER_NAME@$PROD_SERVER_IP "docker pull $CI_REGISTRY_IMAGE"
    - ssh -o StrictHostKeyChecking=no -i key.pem $COMPUTER_NAME@$PROD_SERVER_IP "docker stop $CONTAINER_NAME || true && docker rm $CONTAINER_NAME || true"
    - ssh -o StrictHostKeyChecking=no -i key.pem $COMPUTER_NAME@$PROD_SERVER_IP "docker run -p $PORT -d --name $CONTAINER_NAME $CI_REGISTRY_IMAGE"
    - rm key.pem
